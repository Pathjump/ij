<?php

namespace Objects\InternJumpBundle\Entity;

use Symfony\Component\Validator\Constraints as Assert;
use Doctrine\ORM\Mapping as ORM;

/**
 * Objects\InternJumpBundle\Entity\EmploymentHistory
 *
 * @ORM\Table()
 * @ORM\Entity(repositoryClass="Objects\InternJumpBundle\Entity\EmploymentHistoryRepository")
 */
class EmploymentHistory {

    /**
     * @var integer $id
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * the user
     * @var \Objects\UserBundle\Entity\User $user
     * @ORM\ManyToOne(targetEntity="\Objects\UserBundle\Entity\User", inversedBy="employmentHistories")
     * @ORM\JoinColumn(name="user_id", referencedColumnName="id", onDelete="CASCADE", onUpdate="CASCADE", nullable=false)
     */
    private $user;

    /**
     * @var boolean $isCurrent
     * @ORM\Column(name="isCurrent", type="boolean")
     */
    private $isCurrent = False;
    
    /**
     * @var string $title
     * @Assert\NotNull
     * @ORM\Column(name="title", type="string", length=255)
     */
    private $title;

    /**
     * @var string $industry
     * @ORM\Column(name="industry", type="string", length=255, nullable=true)
     */
    private $industry;
    
    /**
     * @var text $description
     * @ORM\Column(name="description", type="text", nullable=true)
     */
    private $description;

    /**
     * @var date $startedFrom
     * @Assert\NotNull
     * @Assert\Date
     * @ORM\Column(name="startedFrom", type="date")
     */
    private $startedFrom;

    /**
     * @var date $endedIn
     * @Assert\Date
     * @ORM\Column(name="endedIn", type="date", nullable=true)
     */
    private $endedIn;

    /**
     * @var string $jobPosition
     * @ORM\Column(name="jobPosition", type="string", length=255, nullable=true)
     */
    private $jobPosition;

    /**
     * @var string $companyName
     * @Assert\NotNull
     * @ORM\Column(name="companyName", type="string", length=255)
     */
    private $companyName;

    /**
     * @var string $companyUrl
     * @Assert\Url
     * @ORM\Column(name="companyUrl", type="string", length=255, nullable=true)
     */
    private $companyUrl;

    public function __toString() {
        return "$this->title at $this->companyName $this->id";
    }

    /**
     * Get id
     *
     * @return integer 
     */
    public function getId() {
        return $this->id;
    }

    /**
     * Set title
     *
     * @param string $title
     */
    public function setTitle($title) {
        $this->title = $title;
    }

    /**
     * Get title
     *
     * @return string 
     */
    public function getTitle() {
        return $this->title;
    }

    /**
     * Set description
     *
     * @param text $description
     */
    public function setDescription($description) {
        $this->description = $description;
    }

    /**
     * Get description
     *
     * @return text 
     */
    public function getDescription() {
        return $this->description;
    }

    /**
     * Set startedFrom
     *
     * @param date $startedFrom
     */
    public function setStartedFrom($startedFrom) {
        $this->startedFrom = $startedFrom;
    }

    /**
     * Get startedFrom
     *
     * @return date 
     */
    public function getStartedFrom() {
        return $this->startedFrom;
    }

    /**
     * Set endedIn
     *
     * @param date $endedIn
     */
    public function setEndedIn($endedIn) {
        $this->endedIn = $endedIn;
    }

    /**
     * Get endedIn
     *
     * @return date 
     */
    public function getEndedIn() {
        return $this->endedIn;
    }

    /**
     * Set jobPosition
     *
     * @param string $jobPosition
     */
    public function setJobPosition($jobPosition) {
        $this->jobPosition = $jobPosition;
    }

    /**
     * Get jobPosition
     *
     * @return string 
     */
    public function getJobPosition() {
        return $this->jobPosition;
    }

    /**
     * Set companyName
     *
     * @param string $companyName
     */
    public function setCompanyName($companyName) {
        $this->companyName = $companyName;
    }

    /**
     * Get companyName
     *
     * @return string 
     */
    public function getCompanyName() {
        return $this->companyName;
    }

    /**
     * Set companyUrl
     *
     * @param string $companyUrl
     */
    public function setCompanyUrl($companyUrl) {
        $this->companyUrl = $companyUrl;
    }

    /**
     * Get companyUrl
     *
     * @return string 
     */
    public function getCompanyUrl() {
        return $this->companyUrl;
    }

    /**
     * Set user
     *
     * @param Objects\UserBundle\Entity\User $user
     */
    public function setUser(\Objects\UserBundle\Entity\User $user) {
        $this->user = $user;
    }

    /**
     * Get user
     *
     * @return Objects\UserBundle\Entity\User 
     */
    public function getUser() {
        return $this->user;
    }

    /**
     * this function is used by symfony to validate employment time
     * @author Mahmoud
     * @Assert\True(message="The end date must be greater than the start date")
     */
    public function isEmploymentTimeCorrect() {
        if ($this->getEndedIn() > $this->getStartedFrom()) {
            return TRUE;
        }
        return FALSE;
    }


    /**
     * Set isCurrent
     *
     * @param boolean $isCurrent
     */
    public function setIsCurrent($isCurrent)
    {
        $this->isCurrent = $isCurrent;
    }

    /**
     * Get isCurrent
     *
     * @return boolean 
     */
    public function getIsCurrent()
    {
        return $this->isCurrent;
    }
}