<?php

namespace Objects\InternJumpBundle\Entity;

use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\ExecutionContext;
use Doctrine\ORM\Mapping as ORM;

/**
 * Objects\InternJumpBundle\Entity\Skill
 *
 * @ORM\Table()
 * @ORM\Entity
 * @Assert\Callback(methods={"isTypeValid"})
 */
class Skill {

    /**
     * @var integer $id
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @ORM\ManyToMany(targetEntity="\Objects\UserBundle\Entity\User", mappedBy="skills",cascade={"remove","update","persist"})
     */
    private $users;

    /**
     * @var string $title
     * @Assert\NotNull
     * @ORM\Column(name="title", type="string", length=255)
     */
    private $title;

    /**
     * @var string $type
     * @Assert\NotNull
     * @ORM\Column(name="type", type="string", length=255)
     */
    private $type;

    public function __toString() {
        return $this->title;
    }

    /**
     * Get id
     *
     * @return integer 
     */
    public function getId() {
        return $this->id;
    }

    /**
     * Set title
     *
     * @param string $title
     */
    public function setTitle($title) {
        $this->title = $title;
    }

    /**
     * Get title
     *
     * @return string 
     */
    public function getTitle() {
        return $this->title;
    }

    /**
     * Set type
     *
     * @param string $type
     */
    public function setType($type) {
        $this->type = $type;
    }

    /**
     * Get type
     *
     * @return string 
     */
    public function getType() {
        return $this->type;
    }

    /**
     * @author Mahmoud
     * @return array of the valid skill types
     */
    public function getValidTypes() {
        return array(
            'general' => 'general',
            'soft' => 'soft',
            'language' => 'language',
            'technical' => 'technical'
        );
    }

    /**
     * this function is used by symfony to validate the skill type
     * @author Mahmoud
     * @param \Symfony\Component\Validator\ExecutionContext $context
     */
    public function isTypeValid(ExecutionContext $context) {
        //get the valid types array
        $validTypes = $this->getValidTypes();
        // check if the type is valid
        if (!isset($validTypes[$this->getType()])) {
            $propertyPath = $context->getPropertyPath() . '.type';
            $context->setPropertyPath($propertyPath);
            $context->addViolation('This is not a valid type for a skill', array(), null);
        }
    }

    public function __construct()
    {
        $this->users = new \Doctrine\Common\Collections\ArrayCollection();
    }
    
    /**
     * Add users
     *
     * @param Objects\UserBundle\Entity\User $users
     */
    public function addUser(\Objects\UserBundle\Entity\User $users)
    {
        $this->users[] = $users;
    }

    /**
     * Get users
     *
     * @return Doctrine\Common\Collections\Collection 
     */
    public function getUsers()
    {
        return $this->users;
    }
}